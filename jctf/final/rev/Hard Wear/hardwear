#include <Arduino.h>
#include <ESP32Servo.h>

void Strang()
{
    Morse();
}

void Faraday()
{
    systemRun(90, 0);
}

void Volta()
{
    systemRun(135, 90);
}

void Einstein()
{
    systemRun(180, -45);
}

void Navier()
{
    Serial.println("WARNING: [STATE] CHANGE");
    systemRun(180, 135);
    Serial.println("WARNING: [STATE] CHANGE TO TRUE");
}

void Bell()
{
    systemRun(180, 0);
}

void Franklin()
{
    Tesla();
}

void Morse()
{
    systemRun(0, 135);
}

void Kelvin()
{
    Faraday();
}

void Ohm()
{
    systemRun(135, 0);
}

void Marconi()
{
    systemRun(0, 90);
}

void Curie()
{
    systemRun(90, -45);
}

void Stokes()
{
    Serial.println("WARNING: [STATE] CHANGE");
    Galileo();
    Serial.println("WARNING: [STATE] CHANGED TO FALSE");
}

void Newton()
{
    systemRun(45, 180);
}

void Euler()
{
    systemRun(90, 180);
}

void Galileo()
{
    systemRun(180, 90);
}

void Feynman()
{
    Ohm();
}

void Planck()
{
    systemRun(135, 45);
}

void Archimedes()
{
    systemRun(45, 45);
}

void Pascal()
{
    systemRun(90, -135);
}

void Schrodinger()
{
    Bell();
}

void Heisenberg()
{
    systemRun(135, 180);
}

void Fourier()
{
    Curie();
}

void Tesla()
{
    systemRun(45, 0);
}

void Copernicus()
{
    systemRun(45, 135);
}

void Gauss()
{
    systemRun(90, 90);
}

void Hawking()
{
    systemRun(90, 45);
}

void Wheatstone()
{
    Newton();
}

void Hubble()
{
    systemRun(-135, 90);
}

void Fermi()
{
    systemRun(-135, 45);
}

void Maxwell()
{
    systemRun(0, 45);
}

void Turing()
{
    systemRun(-45, 90);
}

void Rutherford()
{
    Marconi();
}

void Kepler()
{
    systemRun(45, 90);
}

void Ramanujan()
{
    systemRun(90, 135);
}

void Joule()
{
    Maxwell();
}

void Edison()
{
    for(int i = 0; i < 3; i++)
    {
        Bohr();
        Archimedes();
    }
    delay(2000);
}

void Nyquist()
{
    Einstein();
}

void Bohr()
{
    systemRun(135, 135);
}

void Moore()
{
    systemRun(135, 45)
}

Servo servo1;
Servo servo2;
Servo servo3;
Servo servo4;

#define IGNORE1 0
#define IGNORE2 180
#define IGNORE3 0
#define IGNORE4 180

void systemRun(int leftHand, int rightHand)
{
    if(leftHand >= 0 && leftHand <= 90)
    {
        servo1.write(leftHand + 90);
        servo2.write(IGNORE2);
    }
    else if(leftHand > 90 && leftHand <= 180)
    {
        servo1.write(IGNORE1);
        servo2.write(leftHand-90);
    }
    else if(leftHand >= -90 && leftHand < 0)
    {
        leftHand = map(leftHand, 0, -90, 90, 0);
        servo1.write(leftHand);
        servo2.write(IGNORE2);
    }
    else if(leftHand < -90 && leftHand >= -180)
    {
        leftHand = map(leftHand, -90, -180, 180, 90);
        servo1.write(IGNORE1);
        servo2.write(leftHand);
    }
    else
    {
        servo1.write(IGNORE1);
        servo2.write(IGNORE2);
    }

    if(rightHand >= 0 && rightHand <= 90)
    {
        servo3.write(IGNORE3);
        rightHand = 90 - rightHand;
        servo4.write(rightHand);
    }
    else if(rightHand > 90 && rightHand <= 180)
    {
        rightHand = map(rightHand, 90, 180, 180, 90);
        servo3.write(rightHand);
        servo4.write(IGNORE4);
    }
    else if(rightHand >= -90 && rightHand < 0)
    {
        servo3.write(IGNORE3);
        servo4.write(90 + abs(rightHand));
    }
    else if(rightHand < -90 && rightHand >= -180)
    {
        rightHand = map(rightHand, -90, -180, 0, 90);
        servo3.write(rightHand);
        servo4.write(IGNORE4);
    }
    else
    {
        servo3.write(IGNORE3);
        servo4.write(IGNORE4);
    }
    delay(2000);

    ignore();
    Serial.println("RESETTING...");

    delay(2000);
}

void ignore()
{
    servo1.write(IGNORE1);
    servo2.write(IGNORE2);
    servo3.write(IGNORE3);
    servo4.write(IGNORE4);
}

void setup()
{
    Serial.begin(115200);
    Serial.println("I hope you know what you are doing...");
    
    servo1.attach(5);
    servo2.attach(18);
    servo3.attach(19);
    servo4.attach(21);

    ignore();
}

void loop()
{
    delay(3000);

    Hawking();
    Bell();
    Bohr();
    Fourier();
    Nyquist();
    Edison();
    Einstein();
    Tesla();
    Kepler();
    Heisenberg();
    Curie();
    Morse();
    Marconi();
    Ramanujan();
    Moore();
    Copernicus();
    Tesla();
    Maxwell();
    Planck();
    Moore();
    Faraday();
    Morse();
    Tesla();
    Gauss();
    Morse();
    Gauss();
    Gauss();
    Moore();
    Pascal();
    Marconi();
    Heisenberg();
    Turing();
    Moore();
    Curie();
    Navier();
    Strang();
    Moore();
    Stokes();
    Morse();
    Navier();
    Kelvin();
    Wheatstone();
    Franklin();
    Moore();
    Kelvin();
    Feynman();
    Stokes();
    Galileo();
    Rutherford();
    Moore();
    Ohm();
    Heisenberg();
    Marconi();
}